use Euratex

/*==============================================================*/
/* HISTORY TABELLEN					                            */
/*==============================================================*/
-- RISCOREGEL

SELECT *
INTO RISICOREGEL_HISTORY
FROM RISICOREGEL
WHERE 1 = 2

ALTER TABLE RISICOREGEL_HISTORY
ADD GEBRUIKER VARCHAR(255) DEFAULT SYSTEM_USER, DATUM DATETIME DEFAULT GETDATE(), ACTIE VARCHAR(255), VERSIENUMMER INT

-- VISUELE_BEOORDELING

SELECT *
INTO VISUELE_BEOORDELING_HISTORY
FROM VISUELE_BEOORDELING
WHERE 1 = 2

ALTER TABLE VISUELE_BEOORDELING_HISTORY
ADD GEBRUIKER VARCHAR(255) DEFAULT SYSTEM_USER, DATUM DATETIME DEFAULT GETDATE(), ACTIE VARCHAR(255), VERSIENUMMER INT

-- MACHINE_VEILIGHEID

SELECT *
INTO MACHINEVEILIGHEID_HISTORY
FROM MACHINEVEILIGHEID
WHERE 1 = 2

ALTER TABLE MACHINEVEILIGHEID_HISTORY
ADD GEBRUIKER VARCHAR(255) DEFAULT SYSTEM_USER, DATUM DATETIME DEFAULT GETDATE(), ACTIE VARCHAR(255), VERSIENUMMER INT

-- PLAN_VAN_AANPAK

SELECT *
INTO PLAN_VAN_AANPAK_HISTORY
FROM PLAN_VAN_AANPAK
WHERE 1 = 2

ALTER TABLE PLAN_VAN_AANPAK_HISTORY
ADD GEBRUIKER VARCHAR(255) DEFAULT SYSTEM_USER, DATUM DATETIME DEFAULT GETDATE(), ACTIE VARCHAR(255)

-- PERIODIEKE_BEOORDELING

SELECT *
INTO PERIODIEKE_BEOORDELING_HISTORY
FROM PERIODIEKE_BEOORDELING
WHERE 1 = 2

ALTER TABLE PERIODIEKE_BEOORDELING_HISTORY
ADD GEBRUIKER VARCHAR(255) DEFAULT SYSTEM_USER, DATUM DATETIME DEFAULT GETDATE(), ACTIE VARCHAR(255)

alter table RISICOREGEL_HISTORY
alter column VOOR_PRIORITEIT varchar(255)

alter table RISICOREGEL_HISTORY
alter column NA_PRIORITEIT  Varchar(255)

/*==============================================================*/
/* FUNCTIES							                            */
/*==============================================================*/
-- Geeft het risico terug op basis van ERNST_VAN_HET_ONGEVAL, KANS_OP_BLOOTSTELLING en KANS_OP_WAARSCHIJNLIJKHEID.
GO
CREATE FUNCTION dbo.FN_GET_RISICO (
	@ERNST_VAN_HET_ONGEVAL NUMERIC(9, 2),
	@KANS_OP_BLOOTSTELLING NUMERIC(9, 2),
	@KANS_OP_WAARSCHIJNLIJKHEID NUMERIC(9, 2)
) RETURNS NUMERIC(9, 2) AS BEGIN
	RETURN (@ERNST_VAN_HET_ONGEVAL * @KANS_OP_BLOOTSTELLING * @KANS_OP_WAARSCHIJNLIJKHEID)
END
GO

-- Geeft de prioriteit van een risico terug.
GO
CREATE FUNCTION dbo.FN_GET_PRIORITEIT (
	@RISICO NUMERIC(9, 2)
) RETURNS VARCHAR(255) AS BEGIN
	DECLARE @PRIORITEIT VARCHAR(255)

	IF(@RISICO <= 20) BEGIN
		SET @PRIORITEIT = 'P 5'
	END ELSE IF(@RISICO >= 21 AND @RISICO <= 75) BEGIN
		SET @PRIORITEIT = 'P 4'
	END ELSE IF(@RISICO >= 76 AND @RISICO <= 200) BEGIN
		SET @PRIORITEIT = 'P 3'
	END ELSE IF(@RISICO >= 201 AND @RISICO <= 400) BEGIN
		SET @PRIORITEIT = 'P 2'
	END ELSE BEGIN
		SET @PRIORITEIT = 'P 1'
	END

	RETURN @PRIORITEIT
END
GO

-- Geeft het CI terug op basis van FREQUENTIE + MOGELIJKHEID_OPTREDEN_GEVAARLIJKE_GEBEURTENIS + MOGELIJKHEID_VOORKOMEN_OF_BEPERKEN_SCHADE.
GO
CREATE FUNCTION dbo.FN_GET_CI (
	@FREQUENTIE NUMERIC(9, 2),
	@MOGELIJKHEID_OPTREDEN_GEVAARLIJKE_GEBEURTENIS NUMERIC(9, 2),
	@MOGELIJKHEID_VOORKOMEN_OF_BEPERKEN_SCHADE NUMERIC(9, 2)
) RETURNS NUMERIC(9, 2) AS BEGIN
	RETURN (@FREQUENTIE + @MOGELIJKHEID_OPTREDEN_GEVAARLIJKE_GEBEURTENIS + @MOGELIJKHEID_VOORKOMEN_OF_BEPERKEN_SCHADE)
END
GO

-- Geeft maximaal rapportnummer + 1 terug
GO
CREATE FUNCTION dbo.FN_GET_NEW_RAPPORTNUMMER (
	@PROJECTNUMMER INT
) RETURNS INT AS BEGIN
	RETURN (
		SELECT ISNULL(MAX(RAPPORTNUMMER), 0) + 1
		FROM RAPPORT
		WHERE PROJECTNUMMER = @PROJECTNUMMER
	)
END
GO

-- Geeft maximaal regelnummer + 1 terug
GO
CREATE FUNCTION dbo.FN_GET_NEW_REGELNUMMER (
	@PROJECTNUMMER INT,
	@RAPPORTNUMMER INT
) RETURNS INT AS BEGIN
	RETURN (
		SELECT ISNULL(MAX(REGELNUMMER), 0) + 1
		FROM RISICOREGEL
		WHERE PROJECTNUMMER = @PROJECTNUMMER
		AND RAPPORTNUMMER = @RAPPORTNUMMER
	)
END
GO

-- Geeft het versienummer voor risicoregel history
GO
CREATE FUNCTION dbo.FN_GET_RISICOREGEL_VERSIENUMMER (
	@PROJECTNUMMER INT,
	@RAPPORTNUMMER INT,
	@REGELNUMMER INT
) RETURNS INT AS BEGIN
	RETURN (
		SELECT ISNULL(COUNT(*), 0) + 1
		FROM RISICOREGEL_HISTORY
		WHERE PROJECTNUMMER = @PROJECTNUMMER
		AND RAPPORTNUMMER = @RAPPORTNUMMER
		AND REGELNUMMER = @REGELNUMMER
	)
END
GO

-- Geeft het versienummer voor visuele beoordeling history
GO
CREATE FUNCTION dbo.FN_GET_VISUELE_BEOORDELING_VERSIENUMMER (
	@PROJECTNUMMER INT,
	@RAPPORTNUMMER INT,
	@REGELNUMMER INT
) RETURNS INT AS BEGIN
	RETURN (
		SELECT ISNULL(COUNT(*), 0) + 1
		FROM VISUELE_BEOORDELING_HISTORY
		WHERE PROJECTNUMMER = @PROJECTNUMMER
		AND RAPPORTNUMMER = @RAPPORTNUMMER
		AND REGELNUMMER = @REGELNUMMER
	)
END
GO

-- Geeft het versienummer voor machineveiligheid history
GO
CREATE FUNCTION dbo.FN_GET_MACHINEVEILIGHEID_VERSIENUMMER (
	@PROJECTNUMMER INT,
	@RAPPORTNUMMER INT,
	@REGELNUMMER INT
) RETURNS INT AS BEGIN
	RETURN (
		SELECT ISNULL(COUNT(*), 0) + 1
		FROM MACHINEVEILIGHEID_HISTORY
		WHERE PROJECTNUMMER = @PROJECTNUMMER
		AND RAPPORTNUMMER = @RAPPORTNUMMER
		AND REGELNUMMER = @REGELNUMMER
	)
END
GO

/*==============================================================*/
/* RISICOREGEL KOLOMMEN					                        */
/*==============================================================*/
-- Voor

alter table RISICOREGEL
drop column VOOR_RISICO

alter table RISICOREGEL
add VOOR_RISICO AS dbo.FN_GET_RISICO(VOOR_ERNST_VAN_ONGEVAL, VOOR_KANS_OP_BLOOTSTELLING, VOOR_KANS_OP_WAARSCHIJNLIJKHEID)

alter table RISICOREGEL
drop column VOOR_PRIORITEIT

alter table RISICOREGEL
add VOOR_PRIORITEIT AS dbo.FN_GET_PRIORITEIT(dbo.FN_GET_RISICO(VOOR_ERNST_VAN_ONGEVAL, VOOR_KANS_OP_BLOOTSTELLING, VOOR_KANS_OP_WAARSCHIJNLIJKHEID))

-- Na

alter table RISICOREGEL
drop column NA_RISICO

alter table RISICOREGEL
add NA_RISICO AS dbo.FN_GET_RISICO(NA_ERNST_VAN_ONGEVAL, NA_KANS_OP_BLOOTSTELLING, NA_KANS_OP_WAARSCHIJNLIJKHEID)

alter table RISICOREGEL
drop column NA_PRIORITEIT

alter table RISICOREGEL
add NA_PRIORITEIT AS dbo.FN_GET_PRIORITEIT(dbo.FN_GET_RISICO(NA_ERNST_VAN_ONGEVAL, NA_KANS_OP_BLOOTSTELLING, NA_KANS_OP_WAARSCHIJNLIJKHEID))

/*==============================================================*/
/* MACHINEVEILIGHEID KOLOM				                        */
/*==============================================================*/

alter table MACHINEVEILIGHEID
drop column CI

alter table MACHINEVEILIGHEID
add CI AS dbo.FN_GET_CI(FREQUENTIE, MOGELIJKHEID_OPTREDEN_GEVAARLIJKE_GEBEURTENIS, MOGELIJKHEID_VOORKOMEN_OF_BEPERKEN_SCHADE)

/*==============================================================*/
/* VISUELE_BEOORDELING BR			                        */
/*==============================================================*/

ALTER TABLE VISUELE_BEOORDELING
ADD CONSTRAINT CHK_VISUELE_BEORDELING CHECK (AFDELING IS NOT NULL OR (PROCES IS NOT NULL OR MACHINE_ONDERDEEL_ IS NOT NULL))
go

use master
