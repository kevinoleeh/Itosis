CREATE TRIGGER TRG_HISTORY_RISICOREGEL
ON RISICOREGEL
FOR UPDATE,DELETE
AS
DECLARE @ACTIE VARCHAR(25) =
	(CASE
		WHEN EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED)
			THEN 'UPDATE'
		WHEN EXISTS(SELECT * FROM DELETED)
			THEN 'DELETE'
		ELSE NULL -- Skip. It may have been a "failed delete".
	END)

BEGIN
	IF @@ROWCOUNT = 0 RETURN
	SET NOCOUNT ON
	BEGIN TRY
INSERT INTO RISICOREGEL_HISTORY
(
 PROJECTNUMMER
,RAPPORTNUMMER
,REGELNUMMER
,ASPECTNAAM
,EFFECTNAAM
,ARBO_ONDERWERP
,RISICO_OMSCHRIJVING_OF_BEVINDING
,HUIDIGE_BEHEERSMAATREGEL
,VOORGESTELDE_ACTIE_OF_VERBETERINGSMAATREGEL
,VOOR_ERNST_VAN_HET_ONGEVAL
,VOOR_KANS_OP_BLOOTSTELLING
,VOOR_KANS_OP_WAARSCHIJNLIJKHEID
,AFWIJKENDE_ACTIE_TER_UITVOERING
,RESTRISICO
,NA_ERNST_VAN_ONGEVAL
,NA_KANS_OP_BLOOTSTELLING
,NA_KANS_OP_WAARSCHIJNLIJKHEID
,VOOR_RISICO
,VOOR_PRIORITEIT
,NA_RISICO
,NA_PRIORITEIT
,ACTIE)
SELECT *,@Actie FROM DELETED

	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END


CREATE TRIGGER TRG_MACHINE_VEILIGHEID_HISTORY
ON MACHINE_VEILIGHEID
FOR UPDATE,DELETE
AS
DECLARE @ACTIE VARCHAR(25) =
	(CASE
		WHEN EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED)
			THEN 'UPDATE'
		WHEN EXISTS(SELECT * FROM DELETED)
			THEN 'DELETE'
		ELSE NULL -- Skip. It may have been a "failed delete".
	END)

BEGIN
	IF @@ROWCOUNT = 0 RETURN
	SET NOCOUNT ON
	BEGIN TRY

INSERT INTO MACHINE_VEILIGHEID_HISTORY
(
 PROJECTNUMMER
,RAPPORTNUMMER
,REGELNUMMER
,MACHINE
,MODEL_TYPE
,SERIENUMMER
,LEVERANCIER
,CE_MARKERING
,CE_DOCUCHECK
,TRANSPORT
,MONTAGE
,IN_BEDRIJFSNAME
,TIJDENS_PRODUCTIE
,TIJDENS_ONDERHOUD
,TIJDENS_STORING
,TIJDENS_REINIGEN
,TIJDENS_AFSTELLEN
,DEMONTAGE
,FREQUENTIE
,MOGELIJKHEID_OPTREDEN_GEVAARLIJKE_GEBEURTENIS
,MOGELIJKHEID_VOORKOMEN_OF_BEPERKEN_SCHADE
,CI
,ERNST_VAN_DE_GEVOLGEN
,ACTIE
)
SELECT *, @Actie FROM DELETED

	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END

CREATE TRIGGER TRG_PERIODIEKE_BEOORDELING_HISTORY
ON PERIODIEKE_BEOORDELING
FOR UPDATE,DELETE
AS
DECLARE @ACTIE VARCHAR(25) =
	(CASE
		WHEN EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED)
			THEN 'UPDATE'
		WHEN EXISTS(SELECT * FROM DELETED)
			THEN 'DELETE'
		ELSE NULL -- Skip. It may have been a "failed delete".
	END)

BEGIN
	IF @@ROWCOUNT = 0 RETURN
	SET NOCOUNT ON
	BEGIN TRY

INSERT INTO PERIODIEKE_BEOORDELING_HISTORY
(
PROJECTNUMMER
,RAPPORTNUMMER
,REGELNUMMER
,DATUM_BEOORDELING
,INSPECTIE_IS_DE_ACTIE_UITGEVOERD
,OPMERKING_STAND_VAN_ZAKEN
,STAND_VAN_ZAKEN
,SCORE
,ACTIE
)
SELECT *,@Actie FROM DELETED

	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END

CREATE TRIGGER TRG_PLAN_VAN_AANPAK_HISTORY
ON PLAN_VAN_AANPAK
FOR UPDATE,DELETE
AS
DECLARE @ACTIE VARCHAR(25) =
	(CASE
		WHEN EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED)
			THEN 'UPDATE'
		WHEN EXISTS(SELECT * FROM DELETED)
			THEN 'DELETE'
		ELSE NULL -- Skip. It may have been a "failed delete".
	END)

BEGIN
	IF @@ROWCOUNT = 0 RETURN
	SET NOCOUNT ON
	BEGIN TRY

INSERT INTO PLAN_VAN_AANPAK_HISTORY
(
PROJECTNUMMER
,RAPPORTNUMMER
,REGELNUMMER
,UITGEVOERD_DOOR
,EINDVERANTWOORDELIJKE
,DATUM_GEREED_GEPLAND
,PBM
,VOORLICHTING
,WERKINSTRUCTIE_PROCEDURE
,TRA
,CONTRACT_LIJST_
,ACTIE
)
SELECT *,@Actie FROM DELETED

	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END

CREATE TRIGGER TRG_VISUELE_BEOORDELING_HISTORY
ON VISUELE_BEOORDELING
FOR UPDATE,DELETE
AS
DECLARE @ACTIE VARCHAR(25) =
	(CASE
		WHEN EXISTS(SELECT * FROM INSERTED) AND EXISTS(SELECT * FROM DELETED)
			THEN 'UPDATE'
		WHEN EXISTS(SELECT * FROM DELETED)
			THEN 'DELETE'
		ELSE NULL -- Skip. It may have been a "failed delete".
	END)

BEGIN
	IF @@ROWCOUNT = 0 RETURN
	SET NOCOUNT ON
	BEGIN TRY

INSERT INTO VISUELE_BEOORDELING_HISTORY
(
PROJECTNUMMER
,RAPPORTNUMMER
,REGELNUMMER
,PROCES
,MACHINE_ONDERDEEL_
,AFDELING
,ACTIE
)
SELECT *,@Actie FROM DELETED

	END TRY
	BEGIN CATCH
		THROW
	END CATCH
END
